import{p as _,i as h,t as b,f as g,s,a as u,b as v,n as I,c as C,d as x,e as w,h as y,g as R}from"./props-B9KxS6R4.js";import"./ErrorMessage-Bos1daxB.js";import"./Button-CZPLgL0E.js";import{I as c}from"./Table-DCkaitXc.js";import"./fa-layers-text.svelte_svelte_type_style_lang-OBKrob8R.js";import"./LinearProgress-D_7wNfsb.js";import"./Spinner-Bzbvtqem.js";import"./EmptyScreen-xQiTa-lR.js";import{d as q,c as V,s as B}from"./create-runtime-stories-DlSv5DmX.js";import"./attributes-C7oVzE9b.js";import"./index-client-CcP4LGr3.js";import"./index-B5O8svG2.js";import"./StarIcon-CLRSCWVm.js";import"./_commonjsHelpers-CqkleIqs.js";import"./index-DtmeDzJ6.js";import"./index-CfOrKyLd.js";const E=(i,a,l=I)=>{let r=()=>y(a==null?void 0:a(),["_children"]);c(i,C(r,{children:(n,d)=>{var o=x();w(()=>R(o,r().content)),u(n,o)},$$slots:{default:!0}}))},{Story:e,meta:D}=q({component:c,title:"Input/Input",tags:["autodocs"],argTypes:{placeholder:{control:"text",description:"placeholder text to show if input field is empty",defaultValue:""},value:{control:"text",description:"initial value",defaultValue:""},disabled:{control:"boolean",description:"Flag the input as being disabled",defaultValue:!1},readonly:{control:"boolean",description:"if true, the input field cannot be edited",defaultValue:!1},required:{control:"boolean",description:"if true, the input field is required",defaultValue:!1},clearable:{control:"boolean",description:"if true, the input field can be cleared with an icon",defaultValue:!1},error:{control:"text",description:"error message to show if input is invalid",defaultValue:""}},parameters:{docs:{description:{component:"These are the stories for the `Input` component.\nIt's the component used to get text/input from the user."}}}});var T=b("<!> <!> <!> <!> <!> <!>",1);function m(i,a){_(a,!1),B(E),h();var l=T(),r=g(l);e(r,{name:"Basic",args:{placeholder:"Basic input with a default value",value:"Value predefined"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var n=s(r,2);e(n,{name:"Readonly",args:{readonly:!0,placeholder:"readonly cannot edit the input field"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var d=s(n,2);e(d,{name:"Required",args:{required:!0,placeholder:"example of required field"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var o=s(d,2);e(o,{name:"Clearable",args:{clearable:!0,placeholder:"the input field can be cleared with an icon"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var p=s(o,2);e(p,{name:"Disabled",args:{disabled:!0,placeholder:"the input field is disabled"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}});var f=s(p,2);e(f,{name:"Error",args:{placeholder:"Input has an error",error:"this input is being invalid"},parameters:{__svelteCsf:{rawCode:"<Input {...args}>{args.content}</Input>"}}}),u(i,l),v()}m.__docgen={keywords:[],data:[],name:"Input.stories.svelte"};const t=V(m,D),U=["Basic","Readonly","Required","Clearable","Disabled","Error"],W=t.Basic,X=t.Readonly,Y=t.Required,Z=t.Clearable,$=t.Disabled,ee=t.Error;export{W as Basic,Z as Clearable,$ as Disabled,ee as Error,X as Readonly,Y as Required,U as __namedExportsOrder,D as default};
