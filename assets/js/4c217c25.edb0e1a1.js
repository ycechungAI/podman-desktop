"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[57778],{33552:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"namespaces/containerEngine/functions/listContainers","title":"Function: listContainers()","description":"listContainers(): Promise\\\\","source":"@site/api/namespaces/containerEngine/functions/listContainers.md","sourceDirName":"namespaces/containerEngine/functions","slug":"/namespaces/containerEngine/functions/listContainers","permalink":"/api/namespaces/containerEngine/functions/listContainers","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"typedocSidebar","previous":{"title":"inspectManifest","permalink":"/api/namespaces/containerEngine/functions/inspectManifest"},"next":{"title":"listImages","permalink":"/api/namespaces/containerEngine/functions/listImages"}}');var i=t(62540),o=t(43023);const r={},a="Function: listContainers()",c={},l=[{value:"Returns",id:"returns",level:2}];function d(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"function-listcontainers",children:"Function: listContainers()"})}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.strong,{children:"listContainers"}),"(): ",(0,i.jsx)(e.code,{children:"Promise"}),"<",(0,i.jsx)(e.a,{href:"/api/interfaces/ContainerInfo",children:(0,i.jsx)(e.code,{children:"ContainerInfo"})}),"[]>"]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:["Defined in: ",(0,i.jsx)(e.a,{href:"https://github.com/ycechungAI/podman-desktop/blob/ce53e6c5bd49e87ed204b4275510079557f03a92/packages/extension-api/src/extension-api.d.ts#L3725",children:"packages/extension-api/src/extension-api.d.ts:3725"})]}),"\n",(0,i.jsx)(e.p,{children:"Returns the list of containers across all container engines, in any state (running or not)."}),"\n",(0,i.jsx)(e.h2,{id:"returns",children:"Returns"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"Promise"}),"<",(0,i.jsx)(e.a,{href:"/api/interfaces/ContainerInfo",children:(0,i.jsx)(e.code,{children:"ContainerInfo"})}),"[]>"]}),"\n",(0,i.jsxs)(e.p,{children:["A promise resolving to an array of containers information. This method returns a subset of the available information for containers. To get the complete description of a specific container, you can use the ",(0,i.jsx)(e.a,{href:"/api/namespaces/containerEngine/functions/inspectContainer",children:"containerEngine.inspectContainer"})," method."]})]})}function p(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},43023:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>a});var s=t(63696);const i={},o=s.createContext(i);function r(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);