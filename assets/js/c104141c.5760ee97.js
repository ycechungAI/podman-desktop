"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7568],{26475:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"interfaces/ProviderAutostart","title":"Interface: ProviderAutostart","description":"Defined in624","source":"@site/api/interfaces/ProviderAutostart.md","sourceDirName":"interfaces","slug":"/interfaces/ProviderAutostart","permalink":"/api/interfaces/ProviderAutostart","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"typedocSidebar","previous":{"title":"Provider","permalink":"/api/interfaces/Provider"},"next":{"title":"ProviderCleanup","permalink":"/api/interfaces/ProviderCleanup"}}');var s=r(62540),i=r(43023);const o={},a="Interface: ProviderAutostart",c={},d=[{value:"Methods",id:"methods",level:2},{value:"start()",id:"start",level:3},{value:"Parameters",id:"parameters",level:4},{value:"logger",id:"logger",level:5},{value:"context?",id:"context",level:5},{value:"Returns",id:"returns",level:4}];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"interface-providerautostart",children:"Interface: ProviderAutostart"})}),"\n",(0,s.jsxs)(t.p,{children:["Defined in: ",(0,s.jsx)(t.a,{href:"https://github.com/ycechungAI/podman-desktop/blob/e39eb60daa29b637aeab34959abcb3283fc9f11b/packages/extension-api/src/extension-api.d.ts#L624",children:"packages/extension-api/src/extension-api.d.ts:624"})]}),"\n",(0,s.jsx)(t.p,{children:"By providing this interface, when Podman Desktop is starting\nIt'll start the provider through this interface.\nIt can be turned off/on by the user."}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"context"})," contains helper functions to be called by the provider during startup (see ",(0,s.jsx)(t.a,{href:"/api/interfaces/AutostartContext",children:"AutostartContext"}),")"]}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"start",children:"start()"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"start"}),"(",(0,s.jsx)(t.code,{children:"logger"}),", ",(0,s.jsx)(t.code,{children:"context"}),"?): ",(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.code,{children:"void"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Defined in: ",(0,s.jsx)(t.a,{href:"https://github.com/ycechungAI/podman-desktop/blob/e39eb60daa29b637aeab34959abcb3283fc9f11b/packages/extension-api/src/extension-api.d.ts#L625",children:"packages/extension-api/src/extension-api.d.ts:625"})]}),"\n",(0,s.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(t.h5,{id:"logger",children:"logger"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"/api/interfaces/Logger",children:(0,s.jsx)(t.code,{children:"Logger"})})}),"\n",(0,s.jsx)(t.h5,{id:"context",children:"context?"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"/api/interfaces/AutostartContext",children:(0,s.jsx)(t.code,{children:"AutostartContext"})})}),"\n",(0,s.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"Promise"}),"<",(0,s.jsx)(t.code,{children:"void"}),">"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},43023:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var n=r(63696);const s={},i=n.createContext(s);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);