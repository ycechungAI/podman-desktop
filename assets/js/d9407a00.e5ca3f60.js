"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[74358],{63685:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>r,contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"namespaces/window/functions/showNotification","title":"Function: showNotification()","description":"showNotification(options): Disposable","source":"@site/api/namespaces/window/functions/showNotification.md","sourceDirName":"namespaces/window/functions","slug":"/namespaces/window/functions/showNotification","permalink":"/api/namespaces/window/functions/showNotification","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"typedocSidebar","previous":{"title":"showInputBox","permalink":"/api/namespaces/window/functions/showInputBox"},"next":{"title":"showOpenDialog","permalink":"/api/namespaces/window/functions/showOpenDialog"}}');var s=o(62540),t=o(43023);const a={},c="Function: showNotification()",r={},d=[{value:"Parameters",id:"parameters",level:2},{value:"options",id:"options",level:3},{value:"Returns",id:"returns",level:2}];function p(n){const e={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"function-shownotification",children:"Function: showNotification()"})}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"showNotification"}),"(",(0,s.jsx)(e.code,{children:"options"}),"): ",(0,s.jsx)(e.a,{href:"/api/classes/Disposable",children:(0,s.jsx)(e.code,{children:"Disposable"})})]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:["Defined in: ",(0,s.jsx)(e.a,{href:"https://github.com/ycechungAI/podman-desktop/blob/e39eb60daa29b637aeab34959abcb3283fc9f11b/packages/extension-api/src/extension-api.d.ts#L2221",children:"packages/extension-api/src/extension-api.d.ts:2221"})]}),"\n",(0,s.jsx)(e.p,{children:"Show notification on different area of Podman Desktop based on its options (Dashboard, bell icon list, OS notification)"}),"\n",(0,s.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(e.h3,{id:"options",children:"options"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"/api/interfaces/NotificationOptions",children:(0,s.jsx)(e.code,{children:"NotificationOptions"})})}),"\n",(0,s.jsx)(e.p,{children:"define how the notification must be created."}),"\n",(0,s.jsx)(e.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"/api/classes/Disposable",children:(0,s.jsx)(e.code,{children:"Disposable"})})})]})}function l(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(p,{...n})}):p(n)}},43023:(n,e,o)=>{o.d(e,{R:()=>a,x:()=>c});var i=o(63696);const s={},t=i.createContext(s);function a(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);